version: "3"

services:
  db:
    restart: always
    container_name: db
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./migrations/database:/docker-entrypoint-initdb.d
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sqlSync24

  rabbitmq:
    restart: always
    container_name: rabbitmq
    image: rabbitmq
    # image: rabbitmq:3.8.7-management-alpine
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:15672"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 10
    depends_on:
      - db
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - 5672:5672
      - 15672:15672
    network_mode: host

  calendar:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile_calendar
    command: sh -c "sleep 10 && /opt/calendar/calendar-app -config /etc/calendar/config.toml"
    ports:
      - 4242:4242
      - 4343:4343
    network_mode: host
    depends_on:
      - db

  scheduler:
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile_scheduler
    network_mode: host
    depends_on:
      - rabbitmq
      - db

  sender:
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile_sender
    network_mode: host
    depends_on:
      - rabbitmq

  client:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile_client
    network_mode: host
    depends_on:
      - calendar
volumes:
  pgdata: